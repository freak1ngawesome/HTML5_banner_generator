{"version":3,"sources":["components/header/header.js","components/customization/customization.js","actions/index.js","components/preview/preview.js","components/export/export.js","components/app/app.js","reducer/index.js","store.js","index.js"],"names":["Header","className","mapDispatchToProps","bgChange","val","type","value","fontColorChange","fontSizeChange","bannerSizeXChange","bannerSizeYChange","imgChange","linkChange","reset","connect","state","settings","background","fontColor","fontSize","bannerSizeX","bannerSizeY","imgURL","link","onClick","e","menu","document","querySelector","txt","target","textContent","style","display","toggleMenu","onChange","onInput","preventDefault","banner_style","position","width","height","overflow","borderRadius","banner_text_style","top","left","color","fontFamily","fontWeight","lineHeight","userSelect","dragAndDrop","elem","parent","onmousedown","event","startX","getBoundingClientRect","startY","documentElement","scrollTop","shiftX","clientX","shiftY","clientY","moveAt","pageX","pageY","onMouseMove","addEventListener","onmouseup","removeEventListener","ondragstart","useEffect","banner","bannerImg","getElementById","bannerText","setAttribute","cursor","onblur","id","src","alt","suppressContentEditableWarning","saveAs","uri","filename","createElement","download","href","body","appendChild","click","removeChild","window","open","showNotification","text","note","innerHTML","hideNotification","node","scrollTo","behavior","html2canvas","useCORS","then","canvas","toDataURL","setTimeout","catch","copyOfNode","outerHTML","navigator","clipboard","writeText","config","textValue","JSON","stringify","App","initialState","reducer","action","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.c12aaac0.chunk.js","sourcesContent":["// просто HEADER...\r\nimport './header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n  <header className='header'>\r\n    <h1 className='header__heading'>Create your awesome banner</h1>\r\n  </header>\r\n  );\r\n};\r\n// экспорт шапки\r\nexport default Header;","// импорты зависимостей\r\nimport {connect} from 'react-redux';\r\nimport {bgChange,fontColorChange,fontSizeChange,bannerSizeXChange,bannerSizeYChange,imgChange,linkChange,reset} from '../../actions';\r\nimport './customization.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n// функциональный компонент меню настройки баннера, передаются настройки и actions\r\nfunction Customization({settings,bgChange,fontColorChange,fontSizeChange,bannerSizeXChange,bannerSizeYChange,imgChange,linkChange,reset}) {\r\n\r\n  // кнопка переключения открытия/закрытия меню настроек\r\n  const toggleMenu = (e) => {\r\n    const menu = document.querySelector('.customization__form'); // получаем элемент меню\r\n    const txt = e.target.textContent; // получаем надпись с кнопки\r\n    if (txt === 'show'){ // если кнопка в положении SHOW, то прячем блок и меняем на HIDE\r\n      menu.style.display = 'block';\r\n      e.target.textContent = 'hide';\r\n    };\r\n    if (txt === 'hide'){ // если кнопка в положении HIDE, то прячем блок и меняем на SHOW\r\n      menu.style.display = 'none';\r\n      e.target.textContent = 'show';\r\n    };\r\n  };\r\n\r\n  // делаем диструктуризацию настроек из settings\r\n  const {background,fontColor,fontSize,bannerSizeX,bannerSizeY,imgURL,link} = settings;\r\n\r\n  // возвращаем из компонента...\r\n  // ниже из return() возвращается разметка секции редактирования формы, на input'ах повешены обработчики событий, так чтобы\r\n  // изменения сразу отображались на превью.\r\n  // картинку можно задать сслыкой (URL или URI)\r\n  // в строку цвета заднего фона можно вставить просто цвет ( вручную или через палитру ) и градиент ( только руками )\r\n  return (\r\n  <section className='customization'>\r\n    <div className='customization__block'>\r\n      <button className='customizer_btn' onClick={(e) => toggleMenu(e)}>show</button>\r\n      <form className='customization__form'>\r\n        <div className='customization__form_item banner_sizes'>\r\n          <h2 className='customization__form_label'>Banner size</h2>\r\n          <div className='customization__form_inputs'>\r\n            <span>X:</span>\r\n            <input type='text' className='customization__form_text' value={bannerSizeX} onChange={e => bannerSizeXChange(e.target.value)}/>\r\n            <span>Y:</span>\r\n            <input type='text' className='customization__form_text' value={bannerSizeY} onChange={e => bannerSizeYChange(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div className='customization__form_item background'>\r\n          <h2 className='customization__form_label'>Background</h2>\r\n          <div className='customization__form_inputs'>\r\n            <input type='color' className='customization__form_color' value={background} onInput={e => bgChange(e.target.value)}/>\r\n            <input type='text' className='customization__form_text' value={background} onChange={e => bgChange(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div className='customization__form_item font_color'>\r\n          <h2 className='customization__form_label'>Font color</h2>\r\n          <div className='customization__form_inputs'>\r\n            <input type='color' className='customization__form_color' value={fontColor} onInput={e => fontColorChange(e.target.value)}/>\r\n            <input type='text' className='customization__form_text' value={fontColor} onChange={e => fontColorChange(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div className='customization__form_item font_size'>\r\n          <h2 className='customization__form_label'>Font size</h2>\r\n          <div className='customization__form_inputs'>\r\n            <input type='text' className='customization__form_text' value={fontSize} onChange={e => fontSizeChange(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div className='customization__form_item imgURL'>\r\n          <h2 className='customization__form_label'>Enter img link or URI</h2>\r\n          <div className='customization__form_inputs'>\r\n            <input type='text' className='customization__form_text' value={imgURL} onChange={e => imgChange(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div className='customization__form_item link'>\r\n          <h2 className='customization__form_label'>Enter link to your site</h2>\r\n          <div className='customization__form_inputs'>\r\n            <input type='text' className='customization__form_text' value={link} onChange={e => linkChange(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <button className='reset_btn' onClick={(e) => {e.preventDefault(); reset()}}>reset</button>\r\n      </form>\r\n    </div>\r\n  </section>\r\n  );\r\n}\r\n// прокидываем свойства из store\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settings: state,\r\n  }\r\n};\r\n// прокидываем действия \r\nconst mapDispatchToProps = {\r\n  bgChange,\r\n  fontColorChange,\r\n  fontSizeChange,\r\n  bannerSizeXChange,\r\n  bannerSizeYChange,\r\n  imgChange,\r\n  linkChange,\r\n  reset,\r\n};\r\n// проверка типов пропсов\r\nCustomization.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  bgChange: PropTypes.func.isRequired,\r\n  fontColorChange: PropTypes.func.isRequired,\r\n  fontSizeChange: PropTypes.func.isRequired,\r\n  bannerSizeXChange: PropTypes.func.isRequired,\r\n  bannerSizeYChange: PropTypes.func.isRequired,\r\n  imgChange: PropTypes.func.isRequired,\r\n  linkChange: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n}\r\n// экспортируем полученный компонент\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Customization);","// тут описаны action'ы\r\nexport const bgChange = (val) => { // изменить цвет заднего фона\r\n  return {\r\n    type: 'ADD_BG',\r\n    value: val,\r\n  };\r\n};\r\nexport const fontColorChange = (val) => { // изменить цвет шрифта\r\n  return {\r\n    type: 'ADD_FONT_COLOR',\r\n    value: val,\r\n  };\r\n};\r\nexport const fontSizeChange = (val) => { // изменить размер шрифта\r\n  return {\r\n    type: 'ADD_FORN_SIZE',\r\n    value: val,\r\n  };\r\n};\r\nexport const bannerSizeXChange = (val) => { // изменить размер баннера по X\r\n  return {\r\n    type: 'ADD_BANNER_SIZE_X',\r\n    value: val,\r\n  };\r\n};\r\nexport const bannerSizeYChange = (val) => { // изменить размер баннера по Y\r\n  return {\r\n    type: 'ADD_BANNER_SIZE_Y',\r\n    value: val,\r\n  };\r\n};\r\nexport const imgChange = (val) => { // изменить/добавить изображение\r\n  return {\r\n    type: 'ADD_IMG',\r\n    value: val,\r\n  };\r\n};\r\nexport const linkChange = (val) => { // изменить/добавить ссылку для перехода на сайт\r\n  return {\r\n    type: 'ADD_LINK',\r\n    value: val,\r\n  };\r\n};\r\nexport const reset = () => { // сбросить настройки\r\n  return {\r\n    type: 'RESET',\r\n  };\r\n};","// импортируем зависимости\r\nimport {connect} from 'react-redux';\r\nimport {useEffect } from 'react';\r\nimport './preview.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n// функциональный компонент превью\r\nfunction Preview({settings}) {\r\n\r\n  // объекты со стилями для элементов превью, в настраиваемые свойства помещаем значения из settings\r\n  const banner_style = { // сам баннер\r\n    position: 'relative',\r\n    width: settings.bannerSizeX + 'px',\r\n    height: settings.bannerSizeY + 'px',\r\n    background: settings.background,\r\n    overflow: 'hidden',\r\n    borderRadius: '10px',\r\n    \r\n  };\r\n  const banner_text_style = { // текст на баннере\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '10px',\r\n    color: settings.fontColor,\r\n    fontFamily: 'monospace',\r\n    fontWeight: '700',\r\n    fontSize: settings.fontSize + 'px',\r\n    lineHeight: settings.fontSize + 'px',\r\n    height: 3*settings.fontSize + 'px',\r\n    overflow: 'hidden',\r\n    userSelect: 'none',\r\n  };\r\n  const banner_img_style = { // изображение на баннере\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n  };\r\n  // useEffect используется для симуляции в функциональном компоненте ComponentDidMount()\r\n  useEffect(() => {\r\n    const banner = document.querySelector('.banner'); // получаем баннер\r\n    const bannerImg = document.getElementById('banner_img'); // получаем картинку на баннере\r\n    const bannerText = document.getElementById('banner_text'); // получаем текст на баннере\r\n    dragAndDrop(bannerImg,banner); // запускаем функцию драг'анд'дроп на картинку\r\n    dragAndDrop(bannerText,banner); // запускаем функцию драг'анд'дроп на текст\r\n    // ниже обрабатывается логика редактирования текста, который доступен после двойного клика на текст\r\n    bannerText.addEventListener('dblclick', () => {\r\n      bannerText.setAttribute('contenteditable','true'); // при даблклике добавляем возможность редактировать текст\r\n      bannerText.style.cursor = 'text'; // меняем курсор\r\n      bannerText.style.userSelect = 'auto'; // добавляем возможность выделять текст\r\n      bannerText.onmousedown = null; // убираем прослушку нажатия на текст\r\n      bannerText.addEventListener('blur', () => { // в момент ухода с текста фокуса возвращаем все назад, текст снова в состоянии перемещения\r\n        bannerText.setAttribute('contenteditable','false');\r\n        bannerText.style.cursor = 'move';\r\n        bannerText.style.userSelect = 'none';\r\n        dragAndDrop(bannerText,banner);\r\n        bannerText.onblur = null;\r\n      });\r\n    });\r\n  },[])\r\n  \r\n  function dragAndDrop (elem,parent){\r\n    elem.onmousedown = function(event) { // по нажатию на объект\r\n      const startX = parent.getBoundingClientRect().left; // определем начало отсчета по X\r\n      const startY = parent.getBoundingClientRect().top + document.documentElement.scrollTop; // определем начало отсчета по Y с учетом прокрутки\r\n      // console.log(document.documentElement.scrollTop);\r\n      let shiftX = event.clientX - elem.getBoundingClientRect().left; // смещение курсора относительно центра объекта по X\r\n      let shiftY = event.clientY - elem.getBoundingClientRect().top; // смещение курсора относительно центра объекта по Y\r\n      moveAt(event.pageX, event.pageY);\r\n\r\n      function moveAt(pageX, pageY) { // перезапись свойств left и top у объекта на основе вычислений разности изначального положения и текущего\r\n        elem.style.left = pageX - shiftX - startX + 'px';\r\n        elem.style.top = pageY - shiftY - startY + 'px';\r\n      };\r\n\r\n      function onMouseMove(event) {\r\n        moveAt(event.pageX, event.pageY); // передвигаем объект, после начальной выставки\r\n      };\r\n\r\n      document.addEventListener('mousemove', onMouseMove); // передвигаем объект при событии mousemove\r\n    \r\n      elem.onmouseup = function() { // отпустить объект, удалить обработчики\r\n        document.removeEventListener('mousemove', onMouseMove);\r\n        elem.onmouseup = null;\r\n      };\r\n    };\r\n    \r\n    elem.ondragstart = function() { // отменим событие браузерного дрэгга\r\n      return false;\r\n    };\r\n  };\r\n  // возвращаем разметку\r\n  return (\r\n    <section className='preview' id='preview'>\r\n      <div className='banner' style={banner_style} id='capture'>\r\n        <img src={settings.imgURL} alt='' style={banner_img_style} id='banner_img'/>\r\n        <div  style={banner_text_style} suppressContentEditableWarning={true} id='banner_text'> Write your awesome text here</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n// прокидываем настройки в компонент\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settings: state\r\n  }\r\n};\r\n\r\n// проверка типов пропсов\r\nPreview.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n}\r\n\r\n// экспортируем компонент\r\nexport default connect(mapStateToProps)(Preview);","// импорты зависимостей\r\nimport {connect} from 'react-redux';\r\nimport './export.css'\r\nimport html2canvas from 'html2canvas';\r\nimport PropTypes from 'prop-types';\r\n\r\n// функциональный компонент Export\r\nfunction Export({link,settings}) {\r\n\r\n  // функция для 'скриншота', испольуется библиотека html2canvas, в случае успеха получаем канвас\r\n  const download = () => {\r\n    const node = document.getElementById('capture');\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"instant\"\r\n    });\r\n    // const closedBtn = document.querySelector('.customizer_btn');// закрываем меню настроек\r\n    // if (closedBtn.textContent === 'hide'){\r\n    //   closedBtn.click();\r\n    // };\r\n\r\n    html2canvas(node,{\r\n      useCORS: true\r\n    }).then(canvas => {\r\n      saveAs(canvas.toDataURL(), \"banner.png\"); // вызывается функция сохранения, куда передается ссылка на канвас и имя файла\r\n      showNotification('<b>take a screenshot...</b>'); // показывается оповещение\r\n      setTimeout(hideNotification,500); // скрывается оповещение\r\n    })\r\n    .catch(() => {\r\n      showNotification('<b>something is going wrong</b>');\r\n      setTimeout(hideNotification,500);\r\n    });\r\n  };\r\n  // эта функция создает <a> с которого можно скачать наше фото\r\n  const saveAs = (uri, filename) => {\r\n    const link = document.createElement(\"a\");\r\n    if (typeof link.download === \"string\") {\r\n      link.href = uri;\r\n      link.download = filename;\r\n      document.body.appendChild(link); // добавим ссылку в DOM\r\n      link.click(); // качаем...\r\n      document.body.removeChild(link); // убираем\r\n    } else {\r\n      window.open(uri);\r\n    }\r\n  };\r\n  // показ уведомления с вашим текстом\r\n  const showNotification = (text) => {\r\n    const note = document.querySelector('.notification');\r\n    note.innerHTML = text;\r\n    note.style.display = 'block';\r\n  };\r\n  // удаление уведомления\r\n  const hideNotification = () => {\r\n    const note = document.querySelector('.notification');\r\n    note.innerHTML = '';\r\n    note.style.display = 'none';\r\n  };\r\n  // функция для сиреализации html разметки\r\n  const copyNode = () => {\r\n    const node = document.getElementById('capture');\r\n    const copyOfNode = node.outerHTML; // получаем сериализацию\r\n    // в буффер обмена кидаем разметку, обернув ее ссылкой на сайт\r\n    navigator.clipboard.writeText(`<a href=${link} style='display: block; heigth: 100%' target='_blank'>` + copyOfNode + '</a>')\r\n    .then(() => {\r\n      showNotification('<b>copied to clipboard</b>');\r\n      setTimeout(hideNotification,500);\r\n    })\r\n    .catch(() => {\r\n      showNotification('<b>something is going wrong</b>');\r\n      setTimeout(hideNotification,500);\r\n    });\r\n  };\r\n  // копирование настроект в формат JSON\r\n  const copySettings = () => {\r\n    const bannerText = document.getElementById('banner_text').textContent;\r\n    const config = {\r\n      ...settings,\r\n      textValue: bannerText // добавим в конфигурацию баннера текст\r\n    };\r\n    navigator.clipboard.writeText(JSON.stringify(config)) // кладем конфиг в буффер обмена\r\n    .then(() => {\r\n      showNotification('<b>settings is saved as JSON</b>');\r\n      setTimeout(hideNotification,500);\r\n    })\r\n    .catch(() => {\r\n      showNotification('<b>something is going wrong</b>');\r\n      setTimeout(hideNotification,500);\r\n    });\r\n  };\r\n\r\n  // возращаемая размента, на кнопки вешаеются обработчики с функциями\r\n  return (\r\n  <>\r\n    <section className='export'>\r\n      <button className='export__btn' onClick={download}>Save as .png</button>\r\n      <button className='export__btn' onClick={copyNode}>Copy as HTML5 string</button>\r\n      <button className='export__btn' onClick={copySettings}>Copy settings</button>\r\n    </section>\r\n    <p className='notification'></p>\r\n  </>\r\n  );\r\n};\r\n\r\n// прокидываем ссылку на сайт и все настойки отделно\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    link: state.link,\r\n    settings: state,\r\n  }\r\n};\r\n// проверка типов пропсов\r\nExport.propTypes = {\r\n  link: PropTypes.string.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n}\r\n\r\n// экспорт компонента\r\nexport default connect(mapStateToProps)(Export);","// импортируем нужные зависимости\r\nimport Header from '../header/header.js';\r\nimport CustomizationMenu from '../customization/customization.js';\r\nimport PreviewBox from '../preview/preview.js';\r\nimport ExportButtons from '../export/export.js';\r\nimport './app.css'\r\n\r\n// оборачиваем наши компоненты в контейнер\r\nfunction App() {\r\n  return (\r\n    <div className='container'>\r\n      <Header/>\r\n      <ExportButtons/>\r\n      <CustomizationMenu/>\r\n      <PreviewBox/>\r\n      \r\n    </div>\r\n  );\r\n}\r\n// экспортируем\r\nexport default App;\r\n","// изначальное состояние\r\nconst initialState = {\r\n  background: '#000000',\r\n  fontColor: '#ffffff',\r\n  fontSize: '44',\r\n  bannerSizeX: '282',\r\n  bannerSizeY: '376',\r\n  imgURL: '',\r\n  link: ''\r\n};\r\n// описание reducer'а\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n    case 'ADD_BG':{\r\n      return {\r\n        ...state,\r\n        background: action.value,\r\n      };\r\n    }\r\n    case 'ADD_FONT_COLOR':{\r\n      return {\r\n        ...state,\r\n        fontColor: action.value,\r\n      };\r\n    }\r\n    case 'ADD_FORN_SIZE':{\r\n      return {\r\n        ...state,\r\n        fontSize: action.value,\r\n      };\r\n    }\r\n    case 'ADD_BANNER_SIZE_X':{\r\n      return {\r\n        ...state,\r\n        bannerSizeX: action.value,\r\n      };\r\n    }\r\n    case 'ADD_BANNER_SIZE_Y':{\r\n      return {\r\n        ...state,\r\n        bannerSizeY: action.value,\r\n      };\r\n    }\r\n    case 'ADD_IMG':{\r\n      return {\r\n        ...state,\r\n        imgURL: action.value,\r\n      };\r\n    }\r\n    case 'ADD_LINK':{\r\n      return {\r\n        ...state,\r\n        link: action.value,\r\n      };\r\n    }\r\n    case 'RESET':{\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;// экспорт reduser'а","import {createStore} from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n\r\n// СОЗДАНИЕ STORE, не более","// импортируем зависимости\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app.js';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store.js'\r\nimport './index.css';\r\n\r\n// app оборачивается провайдером со store\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}